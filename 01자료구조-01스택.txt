import java.util.*;

public class Main10828 {
//  스택 구현 
/*  push X: 정수 X를 스택에 넣는 연산이다.
	pop: 스택에서 가장 위에 있는 정수를 빼고, 그 수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.
	size: 스택에 들어있는 정수의 개수를 출력한다.
	empty: 스택이 비어있으면 1, 아니면 0을 출력한다.
	top: 스택의 가장 위에 있는 정수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.*/
	
	public static void main(String args[]) {
	
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();		//입력받은 정수 n에 저장	
		int[] stack = new int[n];	//stack 배열의 크기가 n개
		int size = 0;
		
		//명령어 n개 실행
		while (n-- > 0) {
			String cmd = sc.next(); 	//입력받은 명령어
			
			if (cmd.equals("push")){	//입력 명령어가 push일때, 
				int num = Integer.parseInt(sc.next());	//명령어 뒤에 숫자
			//	int num = sc.nextInt();(X) 입력받은 명령어 뒤에 숫자 = sc.next로 읽은 것을 형변환 해서 가져와야됨
				stack[size++] = num;
			}
			else if(cmd.equals("top")) {
				if(size==0) {
					System.out.println("-1");
				}else {
					System.out.println(stack[size-1]);
				}
			}
			else if (cmd.equals("pop")) {
				if (size == 0) {		
					System.out.println("-1");
				}else {
					System.out.println(stack[size-1]);
					size -= 1;
				}
			}else if(cmd.equals("size")) {
				System.out.println(size);
			}else if(cmd.equals("empty")) {
				if(size==0) {
					System.out.println("1");
				}else {
					System.out.println("0");
				}
			}
		}
	}
}
